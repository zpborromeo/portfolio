row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric((col_index + 1)):10])
row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric((col_index + 1)):11])
row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric((col_index + 1)):11])
View(row_i)
row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric(col_index):11])
View(temp_team_needs)
current_draft_order <- readxl::read_excel("nfl_draft_order_2022.xlsx") %>%
clean_names()
team_needs <- readxl::read_excel("nfl_draft_team_needs.xlsx") %>%
clean_names() %>%
rename(team = team_name)
top_200_players <- readxl::read_excel("top_200_players.xlsx") %>%
clean_names()
draft_order_pickless <- current_draft_order %>%
select(team)
merge_order_needs <- draft_order_pickless %>%
left_join(team_needs, by="team")
remaining_big_board <- top_200_players
round <- 1
pick <- 1
potential_draft_order <- data.frame("Round" = character(),
"Pick" = character(),
"Team" = character(),
"Name" = character(),
"Position" = character(),
"College" = character(),
"Score" = numeric(),
"Score Multiplier" = numeric(),
"Combined Rank" = numeric(),
"Score Multiplier Rank" = numeric(),
"Average Rank" = numeric())
temp_team_needs <- team_needs %>%
filter(team == "Jacksonville Jaguars")
index <- which(temp_team_needs == "OT", arr.ind = TRUE)
col_index <- as.numeric(index[, 2])
row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric(col_index):11])
View(row_i)
row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric((col_index + 1):11])
row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric((col_index + 1)):11])
View(row_i)
current_draft_order <- readxl::read_excel("nfl_draft_order_2022.xlsx") %>%
clean_names()
team_needs <- readxl::read_excel("nfl_draft_team_needs.xlsx") %>%
clean_names() %>%
rename(team = team_name)
top_200_players <- readxl::read_excel("top_200_players.xlsx") %>%
clean_names()
draft_order_pickless <- current_draft_order %>%
select(team)
merge_order_needs <- draft_order_pickless %>%
left_join(team_needs, by="team")
remaining_big_board <- top_200_players
round <- 1
pick <- 1
potential_draft_order <- data.frame("Round" = character(),
"Pick" = character(),
"Team" = character(),
"Name" = character(),
"Position" = character(),
"College" = character(),
"Score" = numeric(),
"Score Multiplier" = numeric(),
"Combined Rank" = numeric(),
"Score Multiplier Rank" = numeric(),
"Average Rank" = numeric())
temp_team_needs <- team_needs %>%
filter(team == "Jacksonville Jaguars")
index <- which(temp_team_needs == "OT", arr.ind = TRUE)
col_index <- as.numeric(index[, 2])
row_i <- c(temp_team_needs[1:as.numeric((col_index - 1))], temp_team_needs[as.numeric((col_index + 1)):11], "NA")
team_needs <- team_needs %>%
filter(team != "Jacksonville Jaguars")
team_needs[32, ] <- row_i
View(team_needs)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/main.R")
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/main.R")
View(potential_draft_order)
View(potential_draft_order)
View(remaining_big_board)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
View(merge_order_needs)
View(pick_selection)
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
View(merge_order_needs)
View(pp3_score)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
View(pp3_score)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
debugSource("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
debugSource("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
View(pp3_score)
View(temp_max)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
View(pp3_score)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
View(merge_order_needs)
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_only_draft.R")
View(potential_draft_order)
library(httr)
library(tidyverse)
library(DBI)
library(janitor)
library(fs)
library(pool)
library(RPostgres)
library(stringdist)
library(fuzzyjoin)
library(tm)
historic_draft_data <- readxl::read_excel("historical_draft_data.xlsx")
View(historic_draft_data)
View(historic_draft_data)
historic_draft_data <- readxl::read_excel("historical_draft_data.xlsx")
HDD_df <- data.frame("Round" = numeric(),
"Pick" = numeric(),
"QB" = numeric(),
"RB" = numeric(),
"WR" = numeric(),
"TE" = numeric(),
"OT" = numeric(),
"OG" = numeric(),
"OC" = numeric(),
"EDGE" = numeric(),
"DL" = numeric(),
"CB" = numeric(),
"LB" = numeric(),
"S" = numeric(),
"K" = numeric(),
"P" = numeric())
random_val <- runif(3, min=1, max=3)
print(random_val)
random_val <- runif(3, min=1, max=1)
print(random_val)
random_val <- runif(1, min=1, max=3)
print(random_val)
random_val <- round(runif(1, min=1, max=3))
print(random_val    )
library(httr)
library(tidyverse)
library(DBI)
library(janitor)
library(fs)
library(pool)
library(RPostgres)
library(stringdist)
library(fuzzyjoin)
library(tm)
current_draft_order <- readxl::read_excel("nfl_draft_order_2022.xlsx") %>%
clean_names()
team_needs <- readxl::read_excel("nfl_draft_team_needs.xlsx") %>%
clean_names() %>%
rename(team = team_name)
top_200_players <- readxl::read_excel("top_200_players.xlsx") %>%
clean_names()
draft_order_pickless <- current_draft_order %>%
select(team)
merge_order_needs <- draft_order_pickless %>%
left_join(team_needs, by="team")
remaining_big_board <- top_200_players
historic_draft_data <- readxl::read_excel("historical_draft_data.xlsx")
stripped_HDD <- historic_draft_data %>%
select(Round, Overall, Position)
HDD_df <- data.frame("Round" = numeric(),
"Pick" = numeric(),
"QB" = numeric(),
"RB" = numeric(),
"WR" = numeric(),
"TE" = numeric(),
"OT" = numeric(),
"OG" = numeric(),
"OC" = numeric(),
"EDGE" = numeric(),
"DL" = numeric(),
"CB" = numeric(),
"LB" = numeric(),
"S" = numeric(),
"K" = numeric(),
"P" = numeric())
round <- 1
pick <- 1
for (i in 1:104){
row_i = c(round, pick, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
pick <- pick + 1
if (pick <= 32){
round <- 1
}else if (pick <= 64 && pick > 32){
round <- 2
}else{
round <- 3
}
HDD_df[i, ] <- row_i
}
for (i in 1:nrow(stripped_HDD)){
overall <- as.numeric(stripped_HDD[i, 2])
pick_pos <- stripped_HDD[i, 3]
temp_HDD <- HDD_df %>%
filter(Pick == as.numeric(overall))
index <- which(colnames(temp_HDD) == as.character(pick_pos), arr.ind = TRUE)
temp_var <- as.numeric(HDD_df[overall, index])
temp_var <- as.numeric(temp_var + 1)
HDD_df[overall, index] <- temp_var
}
HDD_df <- HDD_df %>%
filter(!is.na(Round)) %>%
select(-c(Round, Pick))
HDD_df <- HDD_df %>%
mutate(Position_Name1 = colnames(HDD_df[max.col(HDD_df, "first")])) %>%
mutate(Position_Name2 = colnames(HDD_df[max.col(HDD_df, "last")])) %>%
mutate(Position_Name3 = colnames(HDD_df[max.col(HDD_df, "random")])) %>%
mutate(total = as.numeric(rowSums(HDD_df))) %>%
mutate(max_val = as.numeric(rowMaxs(as.matrix(HDD_df)))) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:punct:]]", "")) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:digit:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:punct:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:digit:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:punct:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:digit:]]", ""))
round <- 1
pick <- 1
potential_draft_order <- data.frame("Round" = character(),
"Pick" = character(),
"Team" = character(),
"Name" = character(),
"Position" = character(),
"College" = character(),
"Score" = numeric(),
"Score Multiplier" = numeric(),
"Combined Rank" = numeric(),
"Score Multiplier Rank" = numeric(),
"Average Rank" = numeric())
View(HDD_df)
HDD_df <- HDD_df %>%
mutate(Position_Name1 = colnames(HDD_df[max.col(HDD_df, "first")])) %>%
mutate(Position_Name2 = colnames(HDD_df[max.col(HDD_df, "last")])) %>%
mutate(Position_Name3 = colnames(HDD_df[max.col(HDD_df, "random")])) %>%
mutate(total = as.numeric(rowSums(HDD_df))) %>%
mutate(max_val = as.numeric(rowMaxs(as.matrix(HDD_df)))) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:punct:]]", "")) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:digit:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:punct:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:digit:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:punct:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:digit:]]", ""))
HDD_df <- HDD_df %>%
filter(!is.na(Round)) %>%
select(-c(Round, Pick))
HDD_df <- HDD_df %>%
mutate(Position_Name1 = colnames(HDD_df[max.col(HDD_df, "first")])) %>%
mutate(Position_Name2 = colnames(HDD_df[max.col(HDD_df, "last")])) %>%
mutate(Position_Name3 = colnames(HDD_df[max.col(HDD_df, "random")])) %>%
mutate(total = as.numeric(rowSums(HDD_df))) %>%
mutate(max_val = as.numeric(rowMaxs(as.matrix(HDD_df)))) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:punct:]]", "")) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:digit:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:punct:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:digit:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:punct:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:digit:]]", ""))
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(HDD_df)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(HDD_df)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(HDD_df)
HDD_df <- HDD_df %>%
filter(!is.na(Round)) %>%
select(-c(Round, Pick)) %>%
mutate(Position_Name1 = colnames(HDD_df[max.col(HDD_df, "first")])) %>%
mutate(Position_Name2 = colnames(HDD_df[max.col(HDD_df, "last")])) %>%
mutate(Position_Name3 = colnames(HDD_df[max.col(HDD_df, "random")])) %>%
mutate(max_val = as.numeric(rowMaxs(as.matrix(HDD_df)))) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:punct:]]", "")) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:digit:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:punct:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:digit:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:punct:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:digit:]]", "")) %>%
select(-c(Round, Pick))
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(HDD_df)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
temp_HDD_df <- temp_HDD_df %>%
mutate(Position_Name1 = colnames(temp_HDD_df[max.col(temp_HDD_df, "first")])) %>%
mutate(Position_Name2 = colnames(temp_HDD_df[max.col(temp_HDD_df, "last")])) %>%
mutate(Position_Name3 = colnames(temp_HDD_df[max.col(temp_HDD_df, "random")])) %>%
mutate(max_val = as.numeric(rowMaxs(as.matrix(temp_HDD_df)))) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:punct:]]", "")) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:digit:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:punct:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:digit:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:punct:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:digit:]]", "")) %>%
temp_HDD_df <- temp_HDD_df %>%
mutate(Position_Name1 = colnames(temp_HDD_df[max.col(temp_HDD_df, "first")])) %>%
mutate(Position_Name2 = colnames(temp_HDD_df[max.col(temp_HDD_df, "last")])) %>%
mutate(Position_Name3 = colnames(temp_HDD_df[max.col(temp_HDD_df, "random")])) %>%
mutate(max_val = as.numeric(rowMaxs(as.matrix(temp_HDD_df)))) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:punct:]]", "")) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:digit:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:punct:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:digit:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:punct:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:digit:]]", ""))
View(temp_HDD_df)
HDD_df <- HDD_df %>%
left_join(temp_HDD_df)
View(HDD_df)
HDD_df <- HDD_df %>%
left_join(temp_HDD_df) %>%
filter(!is.na(Round))
View(HDD_df)
View(merge_order_needs)
View(HDD_df)
View(top_200_players)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(potential_draft_order)
for (i in 1:nrow(merge_order_needs)){
team_name <- as.character(merge_order_needs[i, 1])
random_val <- round(runif(1, min=17, max=19))
if (pick <= 32){
round <- 1
}else if (pick <= 64 && pick > 32){
round <- 2
}else{
round <- 3
}
pick_pos <- HDD_df[i, as.numeric(random_val)]
pick_selection <- remaining_big_board %>%
filter(position == as.character(pick_pos)) %>%
head(n=1)
row_i = c(round, pick, team_name, pick_selection)
potential_draft_order[i, ] <- row_i
pick_name <- pick_selection %>%
select(name)
pick_pos <- pick_selection %>%
select(position)
remaining_big_board <- remaining_big_board %>%
filter(name != as.character(pick_name))
pick <- pick + 1
}
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(potential_draft_order)
View(pick_selection)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(potential_draft_order)
View(remaining_big_board)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/stat_driven_draft.R")
View(potential_draft_order)
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_multiplier_draft.R")
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/final project/borromeoz-ai-final/score_only_draft.R")
View(potential_draft_order)
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
View(draft_order_pickless)
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
View(merge_order_needs)
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
View(potential_draft_order)
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
View(potential_draft_order)
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
View(potential_draft_order)
save_document <- write.csv(potential_draft_order, "E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/SDD_PDO_V1.csv")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
# Author: Zach Borromeo
# Project Name: AI Final Project
# Date Created: March 20, 2022
# Last Modified: March 20, 20221
# importing all required libraries for this project, primarily to handle data,
# SQL tables, and statistics of tables
library(httr)
library(tidyverse)
library(DBI)
library(janitor)
library(fs)
library(pool)
library(RPostgres)
library(stringdist)
library(fuzzyjoin)
library(tm)
library(matrixStats)
#importing all data related to this project, files are located in the project folder
# of this assignment
#list of the current NFL draft order for 2022
current_draft_order <- readxl::read_excel("nfl_draft_order_2022.xlsx") %>%
clean_names()
#list of combined team needs for 2022
team_needs <- readxl::read_excel("nfl_draft_team_needs.xlsx") %>%
clean_names() %>%
rename(team = team_name)
#list of combined top players for the 2022 draft
top_200_players <- readxl::read_excel("top_200_players.xlsx") %>%
clean_names()
#merging of draft order with the team needs in order
#this is to ensure each pick has team needs associated with them
draft_order_pickless <- current_draft_order %>%
select(team)
merge_order_needs <- draft_order_pickless %>%
left_join(team_needs, by="team")
#using remaining big board as a varible to remove players from as they are picked
#this ensures the same plaer isn't selected twice
remaining_big_board <- top_200_players
#importing the data from previous drafts to read and perform analysis
historic_draft_data <- readxl::read_excel("historical_draft_data.xlsx")
#since we only care about the Round, the Pick number, and the Position,
#we select these columns only
stripped_HDD <- historic_draft_data %>%
select(Round, Overall, Position)
#Now we are building the dataframe to total the number of times each position is
#selected at each pick
HDD_df <- data.frame("Round" = numeric(),
"Pick" = numeric(),
"QB" = numeric(),
"RB" = numeric(),
"WR" = numeric(),
"TE" = numeric(),
"OT" = numeric(),
"OG" = numeric(),
"OC" = numeric(),
"EDGE" = numeric(),
"DL" = numeric(),
"CB" = numeric(),
"LB" = numeric(),
"S" = numeric(),
"K" = numeric(),
"P" = numeric())
round <- 1
pick <- 1
#here we are building rows for each pick as our dataframe from before is empty
for (i in 1:nrow(current_draft_order)){
row_i = c(round, pick, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
pick <- pick + 1
if (pick <= 32){
round <- 1
}else if (pick <= 64 && pick > 32){
round <- 2
}else{
round <- 3
}
HDD_df[i, ] <- row_i
}
#this for loop is going through the historical data and updating each row with +1
#to the column for the position drafted
for (i in 1:nrow(stripped_HDD)){
overall <- as.numeric(stripped_HDD[i, 2])
pick_pos <- stripped_HDD[i, 3]
temp_HDD <- HDD_df %>%
filter(Pick == as.numeric(overall))
index <- which(colnames(temp_HDD) == as.character(pick_pos), arr.ind = TRUE)
temp_var <- as.numeric(HDD_df[overall, index])
temp_var <- as.numeric(temp_var + 1)
HDD_df[overall, index] <- temp_var
}
#clearing out empty rows on a temporary dataframe to perform row level statistics
temp_HDD_df <- HDD_df %>%
filter(!is.na(Round)) %>%
select(-c(Round, Pick))
#mutating dataframe to find the max values/names of the columns with the highest
#values in each row and then removing all digits and punctuation in those columns
temp_HDD_df <- temp_HDD_df %>%
mutate(Position_Name1 = colnames(temp_HDD_df[max.col(temp_HDD_df, "first")])) %>%
mutate(Position_Name2 = colnames(temp_HDD_df[max.col(temp_HDD_df, "last")])) %>%
mutate(Position_Name3 = colnames(temp_HDD_df[max.col(temp_HDD_df, "random")])) %>%
mutate(max_val = as.numeric(rowMaxs(as.matrix(temp_HDD_df)))) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:punct:]]", "")) %>%
mutate(Position_Name1 = str_replace_all(Position_Name1, "[[:digit:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:punct:]]", "")) %>%
mutate(Position_Name2 = str_replace_all(Position_Name2, "[[:digit:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:punct:]]", "")) %>%
mutate(Position_Name3 = str_replace_all(Position_Name3, "[[:digit:]]", ""))
#rejoining the two dataframes together
HDD_df <- HDD_df %>%
left_join(temp_HDD_df) %>%
filter(!is.na(Round))
View(temp_HDD_df)
View(HDD_df)
save_document <- write.csv(HDD_df, "E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/HDD_df.csv")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/stat_driven_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_only_draft.R")
source("E:/UALR/Artificial Intelligence/borromeoz-mock-draft/NFL-Mock-Draft/score_multiplier_draft.R")
